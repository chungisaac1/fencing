# Generated by Django 4.2.11 on 2024-03-11 05:49

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import posts.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(error_messages={'unique': '이미 등록된 이름입니다'}, max_length=10, unique=True, validators=[posts.validators.validate_no_special_characters])),
                ('user_pic', models.ImageField(default='default_profile_pic.jpg', upload_to='profile_pics')),
                ('student_id', models.CharField(error_messages={'unique': '이미 등록된 학번입니다'}, max_length=10, unique=True, validators=[posts.validators.validate_no_special_characters])),
                ('major', models.CharField(max_length=20, validators=[posts.validators.validate_no_special_characters])),
                ('join_year', models.CharField(choices=[('1987-1', '1987-1'), ('1987-2', '1987-2'), ('1988-1', '1988-1'), ('1988-2', '1988-2'), ('1989-1', '1989-1'), ('1989-2', '1989-2'), ('1990-1', '1990-1'), ('1990-2', '1990-2'), ('1991-1', '1991-1'), ('1991-2', '1991-2'), ('1992-1', '1992-1'), ('1992-2', '1992-2'), ('1993-1', '1993-1'), ('1993-2', '1993-2'), ('1994-1', '1994-1'), ('1994-2', '1994-2'), ('1995-1', '1995-1'), ('1995-2', '1995-2'), ('1996-1', '1996-1'), ('1996-2', '1996-2'), ('1997-1', '1997-1'), ('1997-2', '1997-2'), ('1998-1', '1998-1'), ('1998-2', '1998-2'), ('1999-1', '1999-1'), ('1999-2', '1999-2'), ('2000-1', '2000-1'), ('2000-2', '2000-2'), ('2001-1', '2001-1'), ('2001-2', '2001-2'), ('2002-1', '2002-1'), ('2002-2', '2002-2'), ('2003-1', '2003-1'), ('2003-2', '2003-2'), ('2004-1', '2004-1'), ('2004-2', '2004-2'), ('2005-1', '2005-1'), ('2005-2', '2005-2'), ('2006-1', '2006-1'), ('2006-2', '2006-2'), ('2007-1', '2007-1'), ('2007-2', '2007-2'), ('2008-1', '2008-1'), ('2008-2', '2008-2'), ('2009-1', '2009-1'), ('2009-2', '2009-2'), ('2010-1', '2010-1'), ('2010-2', '2010-2'), ('2011-1', '2011-1'), ('2011-2', '2011-2'), ('2012-1', '2012-1'), ('2012-2', '2012-2'), ('2013-1', '2013-1'), ('2013-2', '2013-2'), ('2014-1', '2014-1'), ('2014-2', '2014-2'), ('2015-1', '2015-1'), ('2015-2', '2015-2'), ('2016-1', '2016-1'), ('2016-2', '2016-2'), ('2017-1', '2017-1'), ('2017-2', '2017-2'), ('2018-1', '2018-1'), ('2018-2', '2018-2'), ('2019-1', '2019-1'), ('2019-2', '2019-2'), ('2020-1', '2020-1'), ('2020-2', '2020-2'), ('2021-1', '2021-1'), ('2021-2', '2021-2'), ('2022-1', '2022-1'), ('2022-2', '2022-2'), ('2023-1', '2023-1'), ('2023-2', '2023-2')], default='2020-1', max_length=7)),
                ('awards', models.CharField(max_length=9)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(error_messages={'unique': '이미 있는 제목이네요'}, max_length=50, unique=True)),
                ('content', models.TextField(validators=[django.core.validators.MinLengthValidator(10, '너무 짧군요 10자 이상 적어주세요.'), posts.validators.validate_symbols])),
                ('dt_created', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('dt_modified', models.DateTimeField(auto_now=True, verbose_name='Date Modified')),
            ],
        ),
        migrations.CreateModel(
            name='attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attendant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendants', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
